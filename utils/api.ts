import {dotEnvConfig} from '../deps.ts';

const token = dotEnvConfig().BEARER_TOKEN;

import searchObj from "../types/searchObj.ts";

export async function search({track, artist, year}: searchObj){
    //TODO: use year in search
    const BASE_URL = 'https://api.spotify.com/v1/search/';
    const params = new URLSearchParams({
        // q: encodeURI(`track:${track} artist:${artist}`),
        q: `track:${track} artist:${artist}`,
        type: 'track',
    });
    const API_URL = BASE_URL + '?' + params.toString();
    const response = await fetch(API_URL, {
        headers: {
            "Accept": "application/json",
            "Content-Type": "application/json",
            "Authorization": "Bearer " + token
        }
    });
    if (response.ok) {
        return await response.json();   
    }
    else {
        return response.statusText;
    }
};

export async function createPlaylist(name: string, user_id: string) {
    const BASE_URL = `https://api.spotify.com/v1/users/${user_id}/playlists`;

    const response = await fetch(BASE_URL, {
        method: "POST",
        headers: {
            "Accept": "application/json",
            "Content-Type": "application/json",
            "Content-Length": "0",
            "Authorization": "Bearer " + token
        }, 
        body: JSON.stringify({
            name,
            "description": "Autogenerated Playlist",
            "public": false
        })
    });
    if (response.ok) {
        return await response.json();   
    }
    else {
        return response.statusText;
    }
}

export async function addToPlaylist(playlist_id: string, uris: string){
    
    const BASE_URL = `https://api.spotify.com/v1/playlists/${playlist_id}/tracks`;
    const params = new URLSearchParams({
        uris
    });
    const API_URL = BASE_URL + '?' + params.toString();
    
    const response = await fetch(API_URL,{
        method: "POST",
        headers: {
            "Accept": "application/json",
            "Content-Type": "application/json",
            "Authorization": "Bearer " + token,
        }
    });

    if (response.ok) {
        return await response.json();   
    }
    else {
        return response;
    }
}